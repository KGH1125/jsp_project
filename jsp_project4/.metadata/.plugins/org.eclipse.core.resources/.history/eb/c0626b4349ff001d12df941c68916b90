package conteroller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.PagingVO;
import handeler.PagingHandler;
import service.BoardService;
import service.BoardServiceImpl;

@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(BoardController.class);

	private RequestDispatcher rdp;
	private BoardService bsv;
	private int isOK;
	private String destPage;
	private BoardVO bvo;
	private String savePath;
	private String u8 = "utf-8";

	public BoardController() {
		bsv = new BoardServiceImpl();
	}

	protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding(u8);
		response.setCharacterEncoding(u8);
		response.setContentType(u8);

		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/") + 1);

		switch (path) {
		case "page":
			try {
				int pageNo = 1;
				int qty = 10;
				String type = "";
				String keyword = "";
				PagingVO pgvo = new PagingVO();
				if (request.getParameter("type") != null) {
					type = request.getParameter("type");
					keyword = request.getParameter("keyword");
					pgvo.setType(type);
					pgvo.setKeyword(keyword);
				}
				if (request.getParameter("pageNo") != null) {
					pageNo = Integer.parseInt(request.getParameter("pageNo"));
					pgvo.setPageNo(pageNo);
				}

				int totCount = bsv.getTotal(pgvo);
				log.info("전체페이지수" + totCount);
				List<BoardVO> list = bsv.getPageList(pgvo);
				PagingHandler ph = new PagingHandler(pgvo, totCount);
				request.setAttribute("pgh", ph);
				request.setAttribute("list", list);
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage = "/board/list.jsp";
			break;
		
		}
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		service(request, response);
	}

}
